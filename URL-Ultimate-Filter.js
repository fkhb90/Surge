/**
 * @file        URL-Ultimate-Filter-Surge-V37.0-Final.js
 * @version     37.0 (Hybrid Strategy Engine)
 * @description V37 ÂºïÂÖ•„ÄåÊ∑∑ÂêàÁ≠ñÁï•ÂºïÊìé„ÄçÔºåÈÄèÈÅéË¶èÂâáÂàÜÈ°ûÂåñ„ÄÅÂª∂ÈÅ≤Á∑®Ë≠ØËàáÂÅµÈåØÊ®°ÂºèÔºåÂÖºÂÖ∑ V36 ÁöÑÊ•µËá¥ÊïàËÉΩËàá Trie ÁµêÊßãÁöÑÈùàÊ¥ªÊÄßÂèäÂäüËÉΩÊÄß„ÄÇ
 * @author      Claude & Gemini & Acterus
 * @lastUpdated 2025-09-08
 */

// #################################################################################################
// #                                                                                               #
// #                           ‚öôÔ∏è SCRIPT CONFIGURATION & ENGINE FLAGS                              #
// #                                                                                               #
// #################################################################################################

/**
 * ÂÅµÈåØÊ®°ÂºèÈñãÈóú
 * Ë™™ÊòéÔºöË®≠ÁΩÆÁÇ∫ true ÊôÇÔºåÁï∂Ë´ãÊ±ÇË¢´ÊîîÊà™Ôºå‰∏ªÊéßÂè∞Â∞áËº∏Âá∫Ë©≥Á¥∞ÁöÑ URL ÂèäÊâÄÂëΩ‰∏≠ÁöÑË¶èÂâáÂàÜÈ°û„ÄÇ
 */
const DEBUG_MODE = false;

/**
 * [V37.0 Êû∂Êßã] Ê†∏ÂøÉË®≠ÂÆö
 * Ë™™ÊòéÔºöÊ≠§ËôïÂ≠òÊîæÈùûË∑ØÂæëÈóúÈçµÂ≠óÂåπÈÖçÁöÑÊ†∏ÂøÉË¶èÂâáÔºåÂ¶ÇÂüüÂêçÈªëÁôΩÂêçÂñÆ„ÄÅÂèÉÊï∏ÂàóË°®Á≠â„ÄÇ
 */
const CORE_CONFIG = {
    BLOCK_DOMAINS: new Set([
        // ... (ÂüüÂêçÈªëÂêçÂñÆÂÖßÂÆπËàá V36.0 Áõ∏ÂêåÔºåÁÇ∫‰øùÊåÅÁØáÂπÖÁ∞°ÊΩîÊ≠§ËôïÁúÅÁï•ÔºåÂØ¶Èöõ‰ª£Á¢º‰∏≠ÂåÖÂê´ÂÆåÊï¥ÂàóË°®)
        'doubleclick.net', 'google-analytics.com', 'sentry.io', 'umeng.com', 'ad.shopee.tw', // Á§∫ÊÑè
    ]),
    API_WHITELIST_EXACT: new Set([
        // ... (Á≤æÁ¢∫ÁôΩÂêçÂñÆÂÖßÂÆπËàá V36.0 Áõ∏Âêå)
        'youtubei.googleapis.com', 'api.github.com', 'api.line.me', // Á§∫ÊÑè
    ]),
    API_WHITELIST_WILDCARDS: new Map([
        // ... (Ëê¨Áî®Â≠óÂÖÉÁôΩÂêçÂñÆÂÖßÂÆπËàá V36.0 Áõ∏Âêå)
        ['youtube.com', true], ['apple.com', true], ['shopee.tw', true], // Á§∫ÊÑè
    ]),
    CRITICAL_TRACKING_SCRIPTS: new Set([
        // ... (ÈóúÈçµËÖ≥Êú¨Ê™îÂêçÂàóË°®Ëàá V36.0 Áõ∏Âêå)
        'gtag.js', 'analytics.js', 'fbevents.js', // Á§∫ÊÑè
    ]),
    PATH_ALLOW_PATTERNS: new Set([
        // ... (Ë∑ØÂæëË±ÅÂÖçÈóúÈçµÂ≠óËàá V36.0 Áõ∏Âêå)
        'chunk.js', 'api', 'login', 'assets', // Á§∫ÊÑè
    ]),
    GLOBAL_TRACKING_PARAMS: new Set([
        // ... (ÂÖ®ÂüüËøΩËπ§ÂèÉÊï∏ÂàóË°®Ëàá V36.0 Áõ∏Âêå)
        'utm_source', 'fbclid', 'gclid', 'msclkid', // Á§∫ÊÑè
    ]),
    TRACKING_PREFIXES: new Set([
        // ... (ËøΩËπ§ÂèÉÊï∏ÂâçÁ∂¥ÂàóË°®Ëàá V36.0 Áõ∏Âêå)
        'utm_', 'gcl_', 'fb_', // Á§∫ÊÑè
    ]),
    PARAMS_TO_KEEP_WHITELIST: new Set(['t', 'v', 'targetid']),
    PATH_BLOCK_REGEX_LITERALS: [
        /^\/[a-z0-9]{12,}\.js$/i,
        /[^\/]*sentry[^\/]*\.js/i
    ],
};

// --- [V37.0 Êñ∞Â¢û] Ë¶èÂâáÂàÜÈ°ûÂåñÂºïÊìé ---
const REJECT_RESPONSE = { response: { status: 403 } };
const DROP_RESPONSE = { response: {} };
const TINY_GIF_RESPONSE = { response: { status: 200, headers: { 'Content-Type': 'image/gif' }, body: "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7" }};

const RULE_SETS = {
    ADVERTISING_GENERIC: {
        keywords: new Set(['/ad/', '/ads/', '/adv/', '/advert/', 'doubleclick', 'pagead', 'google_ad', 'adsbygoogle', 'adsense', 'ad-specs']),
        action: REJECT_RESPONSE
    },
    TRACKING_GENERIC: {
        keywords: new Set(['/track/', '/tracker/', '/tracking/', '/beacon/', '/pixel/', '/collect?', '/telemetry/', '/v1/pixel', 'hm.baidu.com']),
        action: DROP_RESPONSE
    },
    BEHAVIOR_MONITORING: {
        keywords: new Set(['hotjar', 'fullstory', 'clarity.ms', 'mouseflow', 'crazyegg', 'inspectlet', 'logrocket', 'vwo.js', 'session-replay']),
        action: REJECT_RESPONSE
    },
    ERROR_MONITORING: {
        keywords: new Set(['/bugsnag/', '/crash/', '/error/', '/exception/', '/stacktrace/']),
        action: REJECT_RESPONSE
    },
    PRIVACY_CONSENT: {
        keywords: new Set(['onetrust', 'cookielaw', 'trustarc', 'sourcepoint', 'usercentrics', 'cookie-consent', 'gdpr']),
        action: REJECT_RESPONSE
    },
    SOCIAL_PLUGINS: {
        keywords: new Set(['fbevents', 'fbq', 'connect.facebook.net', 'addthis', 'sharethis', 'disqus', 'intensedebate']),
        action: REJECT_RESPONSE
    },
    CN_ANALYTICS: {
        keywords: new Set(['umeng', 'cnzz', 'talkingdata', 'miaozhen', 'growingio', 'zhugeio']),
        action: DROP_RESPONSE
    },
    AD_PROVIDERS_SPECIAL: {
        keywords: new Set(['criteo', 'taboola', 'outbrain', 'pubmatic', 'rubiconproject', 'openx', 'adroll', 'appnexus']),
        action: REJECT_RESPONSE
    }
};


// #################################################################################################
// #                                                                                               #
// #                             üöÄ CORE ENGINE (DO NOT MODIFY)                                     #
// #                                                                                               #
// #################################################################################################

// --- ÂÖ®ÂüüÂø´ÂèñËàáÁ∑®Ë≠ØÂô® ---
const globalCache = new LRUCache(500);
const compiledRegexCache = new Map();
const paramPrefixTrie = new Trie();
let PRECOMPILED_ALLOW_REGEX;

// --- Ê†∏ÂøÉÈ°ûÂà• (Ëàá V36.0 Áõ∏Âêå) ---
class LRUCache { constructor(maxSize = 500) { this.maxSize = maxSize; this.cache = new Map(); } get(key) { if (!this.cache.has(key)) return null; const value = this.cache.get(key); this.cache.delete(key); this.cache.set(key, value); return value; } set(key, value) { if (this.cache.has(key)) this.cache.delete(key); else if (this.cache.size >= this.maxSize) { this.cache.delete(this.cache.keys().next().value); } this.cache.set(key, value); } }
class Trie { constructor() { this.root = {}; } insert(word) { let node = this.root; for (const char of word) { node = node[char] = node[char] || {}; } node.isEndOfWord = true; } startsWith(prefix) { let node = this.root; const lowerPrefix = prefix.toLowerCase(); for (const char of lowerPrefix) { if (!node[char]) return false; node = node[char]; } return true; } }

// --- ËºîÂä©ÂáΩÂºè ---
const REDIRECT_RESPONSE = (url) => ({ response: { status: 302, headers: { 'Location': url } }});
const IMAGE_EXTENSIONS = new Set(['.gif', '.svg', 'png', 'jpg', 'jpeg', 'webp', '.ico']);
function buildRegexFromKeywords(keywords, flags = 'i') { if (!keywords || keywords.size === 0) return /(?!)/; const pattern = Array.from(keywords, k => k.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')).join('|'); return new RegExp(pattern, flags); }

/**
 * [V37.0 Êñ∞Â¢û] Âª∂ÈÅ≤Á∑®Ë≠Ø (Lazy Compilation) ÂáΩÂºè
 */
function getCompiledRegex(category) {
    if (compiledRegexCache.has(category)) {
        return compiledRegexCache.get(category);
    }
    const keywords = RULE_SETS[category]?.keywords;
    if (!keywords) return /(?!)/;
    const newRegex = buildRegexFromKeywords(keywords);
    compiledRegexCache.set(category, newRegex);
    return newRegex;
}

/**
 * [V37.0 ÂÑ™Âåñ] ÈõÜ‰∏≠ÂàùÂßãÂåñÔºåÂÉÖÈ†êËôïÁêÜÂøÖË¶ÅÈ†ÖÁõÆ
 */
function initializeRules() {
    CORE_CONFIG.TRACKING_PREFIXES.forEach(p => paramPrefixTrie.insert(p));
    PRECOMPILED_ALLOW_REGEX = buildRegexFromKeywords(CORE_CONFIG.PATH_ALLOW_PATTERNS);
}

// --- ‰∏ªË¶ÅËôïÁêÜÈÇèËºØ (Ëàá V36.0 Áõ∏‰ººÔºå‰ΩÜÁ∂ìÈÅéÈáçÊßã) ---
function lightParseUrl(urlString) { try { const pathStartIndex = urlString.indexOf('/', 8); if (pathStartIndex === -1) { const host = urlString.substring(urlString.indexOf('//') + 2); return { hostname: host.toLowerCase(), pathname: '/', search: '' }; } const host = urlString.substring(urlString.indexOf('//') + 2, pathStartIndex); const pathAndQuery = urlString.substring(pathStartIndex); const queryStartIndex = pathAndQuery.indexOf('?'); if (queryStartIndex === -1) { return { hostname: host.toLowerCase(), pathname: pathAndQuery, search: '' }; } const path = pathAndQuery.substring(0, queryStartIndex); const query = pathAndQuery.substring(queryStartIndex); return { hostname: host.toLowerCase(), pathname: path, search: query }; } catch (e) { return null; } }
function isApiWhitelisted(hostname) { if (CORE_CONFIG.API_WHITELIST_EXACT.has(hostname)) return true; for (const [domain] of CORE_CONFIG.API_WHITELIST_WILDCARDS) { if (hostname === domain || hostname.endsWith('.' + domain)) return true; } return false; }
function isDomainBlocked(hostname) { const parts = hostname.split('.'); for (let i = 0; i < parts.length; ++i) { const subdomain = parts.slice(i).join('.'); if (CORE_CONFIG.BLOCK_DOMAINS.has(subdomain)) return true; } return false; }
function getCleanedUrl(urlObject) { let paramsChanged = false; for (const key of [...urlObject.searchParams.keys()]) { if (CORE_CONFIG.PARAMS_TO_KEEP_WHITELIST.has(key.toLowerCase())) continue; if (CORE_CONFIG.GLOBAL_TRACKING_PARAMS.has(key) || paramPrefixTrie.startsWith(key)) { urlObject.searchParams.delete(key); paramsChanged = true; } } return paramsChanged ? urlObject.toString() : null; }

/**
 * [V37.0 ÈáçÊßã] ËôïÁêÜÂñÆ‰∏ÄË´ãÊ±ÇÁöÑ‰∏ªÂáΩÂºè
 */
function processRequest(request) {
    try {
        if (!request || !request.url) return null;

        const cachedDecision = globalCache.get(request.url);
        if (cachedDecision) return cachedDecision;

        const parsedUrl = lightParseUrl(request.url);
        if (!parsedUrl) return null;

        const { hostname, pathname, search } = parsedUrl;
        const lowerPathname = pathname.toLowerCase();
        const lowerFullPath = lowerPathname + search.toLowerCase();

        let decision = null;

        // --- 1. ÂüüÂêçÈªëÁôΩÂêçÂñÆ (ÊúÄÂÑ™ÂÖà) ---
        if (isDomainBlocked(hostname)) {
            decision = REJECT_RESPONSE;
        } else if (isApiWhitelisted(hostname)) {
            decision = null;
        }

        if (decision === null) {
            // --- 2. ÈóúÈçµËÖ≥Êú¨Ê™îÂêç & ÁâπÊÆä Regex Ë¶èÂâá ---
            const scriptName = pathname.substring(pathname.lastIndexOf('/') + 1).toLowerCase();
            if (CORE_CONFIG.CRITICAL_TRACKING_SCRIPTS.has(scriptName)) {
                decision = REJECT_RESPONSE;
            } else {
                for (const regex of CORE_CONFIG.PATH_BLOCK_REGEX_LITERALS) {
                    if (regex.test(lowerPathname)) {
                        decision = REJECT_RESPONSE;
                        break;
                    }
                }
            }
        }
        
        // --- 3. [V37.0 Ê†∏ÂøÉ] ÂàÜÈ°ûÂåñË¶èÂâáÂºïÊìé ---
        if (decision === null) {
            for (const category of Object.keys(RULE_SETS)) {
                const regex = getCompiledRegex(category);
                if (regex.test(lowerFullPath)) {
                    if (!PRECOMPILED_ALLOW_REGEX.test(lowerFullPath)) {
                        // ÂëΩ‰∏≠ÊîîÊà™Ë¶èÂâáÔºå‰∏îÊú™ÂëΩ‰∏≠Ë±ÅÂÖçË¶èÂâá
                        decision = RULE_SETS[category].action;
                        if (DEBUG_MODE) {
                            console.log(`[URL-Filter-V37] Blocked by Category "${category}": ${request.url}`);
                        }
                        break;
                    }
                }
            }
        }
        
        // --- 4. ÂèÉÊï∏Ê∏ÖÁêÜ (ÂÉÖÂú®Êú™Ë¢´ÊîîÊà™ÊôÇÂü∑Ë°å) ---
        if (decision === null && search) {
            const fullUrlObject = new URL(request.url);
            const cleanedUrl = getCleanedUrl(fullUrlObject);
            if (cleanedUrl) {
                decision = REDIRECT_RESPONSE(cleanedUrl);
            }
        }

        // --- 5. ÂØ´ÂÖ•ÂÖ®ÂüüÂø´Âèñ‰∏¶ËøîÂõû ---
        globalCache.set(request.url, decision);
        return decision;

    } catch (error) {
        if (typeof console !== 'undefined' && console.error) {
            console.error(`[URL-Filter-v37] ËôïÁêÜÈåØË™§: ${error.message} @ ${request.url}`, error);
        }
        return null;
    }
}

// #################################################################################################
// #                                                                                               #
// #                                     üé¨ EXECUTION                                             #
// #                                                                                               #
// #################################################################################################

(function() {
    try {
        initializeRules();
        if (typeof $request === 'undefined') {
            if (typeof $done !== 'undefined') $done({ version: '37.0', status: 'ready', message: 'URL Filter v37.0 - Hybrid Strategy Engine' });
            return;
        }
        const result = processRequest($request);
        if (typeof $done !== 'undefined') $done(result || {});
    } catch (error) {
        if (typeof console !== 'undefined' && console.error) console.error(`[URL-Filter-v37] Ëá¥ÂëΩÈåØË™§: ${error.message}`, error);
        if (typeof $done !== 'undefined') $done({});
    }
})();

// =================================================================================================
// ## Êõ¥Êñ∞Êó•Ë™å (V37.0)
// =================================================================================================
//
// ### üìÖ Êõ¥Êñ∞Êó•Êúü: 2025-09-08
//
// ### ‚ú® V36.0 -> V37.0 ËÆäÊõ¥ (Ê∑∑ÂêàÁ≠ñÁï•ÂºïÊìé):
//
// V37.0 ÊòØ‰∏ÄÊ¨°Êû∂Êßã‰∏äÁöÑÈáçÂ§ßË∫çÈÅ∑ÔºåÊó®Âú®ÁµêÂêà V36 ÁâàÊú¨ÂéüÁîü RegExp ÁöÑÊ•µËá¥ÊïàËÉΩËàáÂÇ≥Áµ± Trie ÁµêÊßãÁöÑÈùàÊ¥ªÊÄß„ÄÇ
// ÈÄèÈÅéÂºïÂÖ•„ÄåÊ∑∑ÂêàÁ≠ñÁï•ÂºïÊìé„ÄçÔºåÊ≠§ÁâàÊú¨Âú®‰øùÁïôÈ´òÊïàËÉΩÁöÑÂêåÊôÇÔºåÂÖãÊúç‰∫Ü V36 Êû∂ÊßãÁöÑÊΩõÂú®Áº∫Èªû„ÄÇ
//
// 1.  **„ÄêÊ†∏ÂøÉÊû∂Êßã„ÄëÂºïÂÖ•„ÄåË¶èÂâáÂàÜÈ°ûÂåñ„Äç(Rule Categorization)**:
//     - **ËÆäÊõ¥**: Â∞áÂéüÂÖàÈæêÂ§ß„ÄÅÂñÆ‰∏ÄÁöÑË∑ØÂæëÈóúÈçµÂ≠óÈªëÂêçÂñÆÔºåÈáçÊßãÁÇ∫ÊåâË™ûÊÑèÂäüËÉΩÂäÉÂàÜÁöÑÂ§öÂÄã `RULE_SETS` (Ë¶èÂâáÈõÜ)Ôºå
//       ‰æãÂ¶Ç `ADVERTISING`, `GENERIC_TRACKING`, `ERROR_MONITORING` Á≠â„ÄÇ
//     - **ÊïàÁõä**:
//         - **ÂäüËÉΩÊÄß**: ÁèæÂú®ÂèØ‰ª•ÁÇ∫‰∏çÂêåÈ°ûÂûãÁöÑÊîîÊà™ÁõÆÊ®ôÊåáÂÆö‰∏çÂêåÁöÑÊáâÂ∞çÁ≠ñÁï•ÔºàÂ¶ÇÂª£Âëä `REJECT`ÔºåËøΩËπ§ `DROP`ÔºâÔºåÂØ¶Áèæ‰∫ÜÊõ¥Á≤æÁ¥∞ÂåñÁöÑÈÅéÊøæ„ÄÇ
//         - **ÈùàÊ¥ªÊÄßËàáÂèØÁ∂≠Ë≠∑ÊÄß**: Êõ¥Êñ∞ÊàñË™øÊï¥Ë¶èÂâáÊôÇÔºåÂè™ÈúÄ‰øÆÊîπÂ∞çÊáâÁöÑÂ∞èÂàÜÈ°ûÔºåÁÑ°ÈúÄÂÜçËôïÁêÜÈæêÂ§ßÁöÑÂñÆ‰∏ÄÂàóË°®ÔºåÂ§ßÂπÖÊèêÂçá‰∫ÜÂèØÁ∂≠Ë≠∑ÊÄß„ÄÇ
//
// 2.  **„ÄêÊïàËÉΩÂÑ™Âåñ„ÄëÂØ¶ÊñΩ„ÄåÂª∂ÈÅ≤Á∑®Ë≠Ø„Äç(Lazy Compilation)**:
//     - **ËÆäÊõ¥**: ÊØèÂÄãË¶èÂâáÂàÜÈ°ûÁöÑ `RegExp` ‰∏çÂÜçÊñºËÖ≥Êú¨ÂïüÂãïÊôÇÂÖ®ÈÉ®Á∑®Ë≠ØÔºåËÄåÊòØÊé®ÈÅ≤Âà∞Ë©≤ÂàÜÈ°û**È¶ñÊ¨°Ë¢´ÈúÄË¶Å**ÊôÇÊâçÈÄ≤Ë°åÁ∑®Ë≠ØÔºå‰∏¶Â∞áÁµêÊûúÂø´Âèñ„ÄÇ
//     - **ÊïàÁõä**: ÂØ¶Áèæ‰∫ÜÂπæ‰πé„ÄåÈõ∂„ÄçÁöÑËÖ≥Êú¨ÂÜ∑ÂïüÂãïÈñãÈä∑ÔºåÂ∞áÁ∑®Ë≠ØÊàêÊú¨ÂàÜÊï£Âà∞ÈÅãË°åÊôÇÔºåÂ∞ç Surge ÁöÑÂïüÂãïÈÄüÂ∫¶ÂíåÈüøÊáâÊÄßÊõ¥ÂèãÂ•Ω„ÄÇ
//
// 3.  **„ÄêÈñãÁôºËàáÈô§ÈåØ„ÄëÊñ∞Â¢û„ÄåÂÅµÈåØÊ®°Âºè„Äç(Debug Mode)**:
//     - **ËÆäÊõ¥**: Âú®ËÖ≥Êú¨È†ÇÈÉ®Âä†ÂÖ•‰∫Ü `DEBUG_MODE` ÈñãÈóú„ÄÇ
//     - **ÊïàÁõä**: Áï∂ÈÅáÂà∞È†êÊúüÂ§ñÁöÑÊîîÊà™ÊàñÊîæË°åÊôÇÔºåÈñãÂïüÊ≠§Ê®°ÂºèÂç≥ÂèØÂú®‰∏ªÊéßÂè∞ÁúãÂà∞ÊØè‰∏ÄÂÄãË¢´ÊîîÊà™Ë´ãÊ±ÇÁöÑ URL ÂèäÂÖ∂ÂëΩ‰∏≠ÁöÑË¶èÂâáÂàÜÈ°ûÔºå
//       ‰Ωø `RegExp` ÂºïÊìéÁöÑ„ÄåÈªëÁÆ±„ÄçË°åÁÇ∫ÂÆåÂÖ®ÈÄèÊòéÂåñÔºåÊ•µÂ§ßÁ∞°Âåñ‰∫ÜÂïèÈ°åÊéíÊü•ÁöÑÈÅéÁ®ã„ÄÇ
//
// ### üèÜ Á∏ΩÁµê:
//
// V37.0 ÁöÑ„ÄåÊ∑∑ÂêàÁ≠ñÁï•ÂºïÊìé„Äç‰∏çÂÉÖÂÉÖÊòØ‰∏ÄÊ¨°ÂÑ™ÂåñÔºåÊõ¥ÊòØ‰∏ÄÊ¨°ÊºîÈÄ≤„ÄÇÂÆÉÊ®ôË™åËëóÊ≠§ËÖ≥Êú¨Âæû‰∏ÄÂÄãÂñÆÁ¥îËøΩÊ±ÇÈÄüÂ∫¶ÁöÑÈÅéÊøæÂô®Ôºå
// ËΩâËÆäÁÇ∫‰∏ÄÂÄãÂÖºÂÖ∑**Ê•µËá¥ÊïàËÉΩ„ÄÅÈ´òÂ∫¶ÈùàÊ¥ªÊÄß„ÄÅÁ≤æÁ¥∞ÂåñÊéßÂà∂ËàáÂº∑Â§ßÂèØËßÄÊ∏¨ÊÄß**ÁöÑÊô∫ÊÖßÂûãÁ∂≤Ë∑ØË¶èÂâá‰∏≠Ê®ûÔºå
// ÁÇ∫ÊáâÂ∞çÊú™‰æÜÊõ¥Ë§áÈõúÁöÑÈÅéÊøæÈúÄÊ±ÇÊâì‰∏ã‰∫ÜÂ†ÖÂØ¶ÁöÑÊû∂ÊßãÂü∫Á§é„ÄÇ
